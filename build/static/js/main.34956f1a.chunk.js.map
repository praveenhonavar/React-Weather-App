{"version":3,"sources":["components/Weather.js","App.js","reportWebVitals.js","index.js"],"names":["Weather","useState","city","setCity","weatherData","setWeatherData","useEffect","axios","get","then","res","console","log","data","className","class","onChange","event","target","value","type","placeholder","temperature","description","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAmDeA,MA9Cf,WACE,MAAwBC,mBAAS,SAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAKA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KAaA,OAPAC,qBAAU,WACRC,IAAMC,IAAN,kDAAqDN,IAAQO,MAAK,SAACC,GACjEC,QAAQC,IAAIF,GACZL,EAAeK,EAAIG,WAEpB,CAACX,IAGF,gCACE,qBAAKY,UAAU,cAAf,SACE,mBAAGC,MAAM,8BAAT,SACE,sBAAMD,UAAU,aAAhB,8BAIJ,sBAAKA,UAAU,iBAAf,UACE,uBACEE,SArBU,SAACC,GACjBd,EAAQc,EAAMC,OAAOC,QAqBfC,KAAK,SACLN,UAAU,aACVO,YAAY,oBAId,sBAAKP,UAAU,kBAAf,UACE,qBAAIA,UAAU,mBAAd,iBAAqC,uBAAMA,UAAU,YAAhB,cAA8BV,EAAYkB,YAA1C,OAArC,OAAwGpB,KACxG,uBACA,oBAAIY,UAAU,sBAAd,SAAqCV,EAAYmB,wBCjC5CC,MARf,WACE,OACE,qBAAKV,UAAU,MAAf,SACA,cAAC,EAAD,OCMWW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.34956f1a.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport \"../styles/weather.css\";\r\n\r\nfunction Weather() {\r\n  const [city, setCity] = useState(\"India\");\r\n\r\n//   const [temperature, setTemperature] = useState(\"\");\r\n//   const [description, setDescription] = useState(\"\");\r\n\r\n  const [weatherData, setWeatherData] = useState({});\r\n\r\n  const enterCity = (event) => {\r\n    setCity(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios.get(`https://goweather.herokuapp.com/weather/${city}`).then((res) => {\r\n      console.log(res);\r\n      setWeatherData(res.data);\r\n    });\r\n  }, [city]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"app-heading\">\r\n        <i class=\"fas fa-globe-americas fa-3x\">\r\n          <span className=\"app-header\"> Weather App</span>\r\n        </i>\r\n      </div>\r\n\r\n      <div className=\"main-container\">\r\n        <input\r\n          onChange={enterCity}\r\n          type=\"search\"\r\n          className=\"search-bar\"\r\n          placeholder=\"Enter city Name\"\r\n\r\n        ></input>\r\n\r\n        <div className=\"weather-details\">\r\n          <h3 className=\"city-temperature\">Its <span className=\"city-temp\"> {weatherData.temperature} </span> in {city}</h3>\r\n          <br></br>\r\n          <h2 className=\"weather-description\">{weatherData.description}</h2>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Weather;\r\n","import './App.css';\nimport Weather from './components/Weather';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Weather/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}